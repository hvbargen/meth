/*
 * generated by Xtext 2.26.0
 */
grammar InternalMeth;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package hvbargen.meth.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hvbargen.meth.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hvbargen.meth.services.MethGrammarAccess;

}

@parser::members {

 	private MethGrammarAccess grammarAccess;

    public InternalMethParser(TokenStream input, MethGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MethGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getEinheitensystemEinheitensystemParserRuleCall_0_0());
				}
				lv_einheitensystem_0_0=ruleEinheitensystem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"einheitensystem",
						lv_einheitensystem_0_0,
						"hvbargen.meth.Meth.Einheitensystem");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getMethodenMethodeParserRuleCall_1_0());
				}
				lv_methoden_1_0=ruleMethode
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					add(
						$current,
						"methoden",
						lv_methoden_1_0,
						"hvbargen.meth.Meth.Methode");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleEinheitensystem
entryRuleEinheitensystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEinheitensystemRule()); }
	iv_ruleEinheitensystem=ruleEinheitensystem
	{ $current=$iv_ruleEinheitensystem.current; }
	EOF;

// Rule Einheitensystem
ruleEinheitensystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEinheitensystemAccess().getEinheitensystemAction_0(),
					$current);
			}
		)
		otherlv_1='Einheitensystem'
		{
			newLeafNode(otherlv_1, grammarAccess.getEinheitensystemAccess().getEinheitensystemKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getEinheitensystemAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEinheitensystemAccess().getDeklarationenDeklarationParserRuleCall_3_0());
				}
				lv_deklarationen_3_0=ruleDeklaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEinheitensystemRule());
					}
					add(
						$current,
						"deklarationen",
						lv_deklarationen_3_0,
						"hvbargen.meth.Meth.Deklaration");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getEinheitensystemAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleDeklaration
entryRuleDeklaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeklarationRule()); }
	iv_ruleDeklaration=ruleDeklaration
	{ $current=$iv_ruleDeklaration.current; }
	EOF;

// Rule Deklaration
ruleDeklaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDeklarationAccess().getDimensionParserRuleCall_0());
		}
		this_Dimension_0=ruleDimension
		{
			$current = $this_Dimension_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeklarationAccess().getEinheitParserRuleCall_1());
		}
		this_Einheit_1=ruleEinheit
		{
			$current = $this_Einheit_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeklarationAccess().getUmrechnungParserRuleCall_2());
		}
		this_Umrechnung_2=ruleUmrechnung
		{
			$current = $this_Umrechnung_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDeklarationAccess().getKonstanteParserRuleCall_3());
		}
		this_Konstante_3=ruleKonstante
		{
			$current = $this_Konstante_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDimension
entryRuleDimension returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimensionRule()); }
	iv_ruleDimension=ruleDimension
	{ $current=$iv_ruleDimension.current; }
	EOF;

// Rule Dimension
ruleDimension returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Dimension'
		{
			newLeafNode(otherlv_0, grammarAccess.getDimensionAccess().getDimensionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDimensionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimensionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getDimensionAccess().getEqualsSignKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDimensionAccess().getBasisDimensionMultiplikationParserRuleCall_2_1_0());
					}
					lv_basis_3_0=ruleDimensionMultiplikation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimensionRule());
						}
						set(
							$current,
							"basis",
							lv_basis_3_0,
							"hvbargen.meth.Meth.DimensionMultiplikation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getDimensionAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleDimensionMultiplikation
entryRuleDimensionMultiplikation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimensionMultiplikationRule()); }
	iv_ruleDimensionMultiplikation=ruleDimensionMultiplikation
	{ $current=$iv_ruleDimensionMultiplikation.current; }
	EOF;

// Rule DimensionMultiplikation
ruleDimensionMultiplikation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDimensionMultiplikationAccess().getDimensionPrimaryParserRuleCall_0());
		}
		this_DimensionPrimary_0=ruleDimensionPrimary
		{
			$current = $this_DimensionPrimary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getDimensionMultiplikationAccess().getDimensionMultiplikationLinksAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='*'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getDimensionMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDimensionMultiplikationRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='/'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getDimensionMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getDimensionMultiplikationRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getDimensionMultiplikationAccess().getRechtsDimensionPrimaryParserRuleCall_1_2_0());
					}
					lv_rechts_3_0=ruleDimensionPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDimensionMultiplikationRule());
						}
						set(
							$current,
							"rechts",
							lv_rechts_3_0,
							"hvbargen.meth.Meth.DimensionPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleDimensionPrimary
entryRuleDimensionPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDimensionPrimaryRule()); }
	iv_ruleDimensionPrimary=ruleDimensionPrimary
	{ $current=$iv_ruleDimensionPrimary.current; }
	EOF;

// Rule DimensionPrimary
ruleDimensionPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getDimensionPrimaryAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getDimensionPrimaryAccess().getDimensionMultiplikationParserRuleCall_0_1());
			}
			this_DimensionMultiplikation_1=ruleDimensionMultiplikation
			{
				$current = $this_DimensionMultiplikation_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getDimensionPrimaryAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDimensionPrimaryRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getDimensionPrimaryAccess().getRefDimensionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEinheit
entryRuleEinheit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEinheitRule()); }
	iv_ruleEinheit=ruleEinheit
	{ $current=$iv_ruleEinheit.current; }
	EOF;

// Rule Einheit
ruleEinheit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Einheit'
		{
			newLeafNode(otherlv_0, grammarAccess.getEinheitAccess().getEinheitKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEinheitAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEinheitRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		(
			(
				otherlv_2='in'
				{
					newLeafNode(otherlv_2, grammarAccess.getEinheitAccess().getInKeyword_2_0_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitRule());
							}
						}
						otherlv_3=RULE_ID
						{
							newLeafNode(otherlv_3, grammarAccess.getEinheitAccess().getRefDimensionCrossReference_2_0_1_0());
						}
					)
				)
			)
			    |
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getEinheitAccess().getEqualsSignKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getEinheitAccess().getFaktorEinheitMultiplikationParserRuleCall_2_1_1_0());
						}
						lv_faktor_5_0=ruleEinheitMultiplikation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getEinheitRule());
							}
							set(
								$current,
								"faktor",
								lv_faktor_5_0,
								"hvbargen.meth.Meth.EinheitMultiplikation");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitRule());
							}
						}
						otherlv_6=RULE_ID
						{
							newLeafNode(otherlv_6, grammarAccess.getEinheitAccess().getBasiseinheitEinheitCrossReference_2_1_2_0());
						}
					)
				)?
			)
		)
		otherlv_7=';'
		{
			newLeafNode(otherlv_7, grammarAccess.getEinheitAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleUmrechnung
entryRuleUmrechnung returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUmrechnungRule()); }
	iv_ruleUmrechnung=ruleUmrechnung
	{ $current=$iv_ruleUmrechnung.current; }
	EOF;

// Rule Umrechnung
ruleUmrechnung returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Umrechnung'
		{
			newLeafNode(otherlv_0, grammarAccess.getUmrechnungAccess().getUmrechnungKeyword_0());
		}
		(
			(
				lv_varname_1_0=RULE_ID
				{
					newLeafNode(lv_varname_1_0, grammarAccess.getUmrechnungAccess().getVarnameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUmrechnungRule());
					}
					setWithLastConsumed(
						$current,
						"varname",
						lv_varname_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUmrechnungRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getUmrechnungAccess().getVonEinheitEinheitCrossReference_2_0());
				}
			)
		)
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getUmrechnungAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUmrechnungAccess().getAusdruckEinheitAdditionParserRuleCall_4_0());
				}
				lv_ausdruck_4_0=ruleEinheitAddition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUmrechnungRule());
					}
					set(
						$current,
						"ausdruck",
						lv_ausdruck_4_0,
						"hvbargen.meth.Meth.EinheitAddition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUmrechnungRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getUmrechnungAccess().getNachEinheitEinheitCrossReference_5_0());
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getUmrechnungAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleKonstante
entryRuleKonstante returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKonstanteRule()); }
	iv_ruleKonstante=ruleKonstante
	{ $current=$iv_ruleKonstante.current; }
	EOF;

// Rule Konstante
ruleKonstante returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Konstante'
		{
			newLeafNode(otherlv_0, grammarAccess.getKonstanteAccess().getKonstanteKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getKonstanteAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKonstanteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		otherlv_2='='
		{
			newLeafNode(otherlv_2, grammarAccess.getKonstanteAccess().getEqualsSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getKonstanteAccess().getAusdruckEinheitAdditionParserRuleCall_3_0());
				}
				lv_ausdruck_3_0=ruleEinheitAddition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getKonstanteRule());
					}
					set(
						$current,
						"ausdruck",
						lv_ausdruck_3_0,
						"hvbargen.meth.Meth.EinheitAddition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=';'
		{
			newLeafNode(otherlv_4, grammarAccess.getKonstanteAccess().getSemicolonKeyword_4());
		}
	)
;

// Entry rule entryRuleZahl
entryRuleZahl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getZahlRule()); }
	iv_ruleZahl=ruleZahl
	{ $current=$iv_ruleZahl.current; }
	EOF;

// Rule Zahl
ruleZahl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getZahlAccess().getGanzzahlParserRuleCall_0());
		}
		this_Ganzzahl_0=ruleGanzzahl
		{
			$current = $this_Ganzzahl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getZahlAccess().getDezimalzahlParserRuleCall_1());
		}
		this_Dezimalzahl_1=ruleDezimalzahl
		{
			$current = $this_Dezimalzahl_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleGanzzahl
entryRuleGanzzahl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGanzzahlRule()); }
	iv_ruleGanzzahl=ruleGanzzahl
	{ $current=$iv_ruleGanzzahl.current; }
	EOF;

// Rule Ganzzahl
ruleGanzzahl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_iwert_0_0=RULE_GANZ
			{
				newLeafNode(lv_iwert_0_0, grammarAccess.getGanzzahlAccess().getIwertGANZTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getGanzzahlRule());
				}
				setWithLastConsumed(
					$current,
					"iwert",
					lv_iwert_0_0,
					"hvbargen.meth.Meth.GANZ");
			}
		)
	)
;

// Entry rule entryRuleDezimalzahl
entryRuleDezimalzahl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDezimalzahlRule()); }
	iv_ruleDezimalzahl=ruleDezimalzahl
	{ $current=$iv_ruleDezimalzahl.current; }
	EOF;

// Rule Dezimalzahl
ruleDezimalzahl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_fwert_0_0=RULE_DEZIMAL
			{
				newLeafNode(lv_fwert_0_0, grammarAccess.getDezimalzahlAccess().getFwertDEZIMALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDezimalzahlRule());
				}
				setWithLastConsumed(
					$current,
					"fwert",
					lv_fwert_0_0,
					"hvbargen.meth.Meth.DEZIMAL");
			}
		)
	)
;

// Entry rule entryRuleEinheitAddition
entryRuleEinheitAddition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEinheitAdditionRule()); }
	iv_ruleEinheitAddition=ruleEinheitAddition
	{ $current=$iv_ruleEinheitAddition.current; }
	EOF;

// Rule EinheitAddition
ruleEinheitAddition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEinheitAdditionAccess().getEinheitMultiplikationParserRuleCall_0());
		}
		this_EinheitMultiplikation_0=ruleEinheitMultiplikation
		{
			$current = $this_EinheitMultiplikation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEinheitAdditionAccess().getEinheitAdditionLinksAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='+'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getEinheitAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitAdditionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='-'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getEinheitAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitAdditionRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEinheitAdditionAccess().getRechtsEinheitMultiplikationParserRuleCall_1_2_0());
					}
					lv_rechts_3_0=ruleEinheitMultiplikation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEinheitAdditionRule());
						}
						set(
							$current,
							"rechts",
							lv_rechts_3_0,
							"hvbargen.meth.Meth.EinheitMultiplikation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEinheitMultiplikation
entryRuleEinheitMultiplikation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEinheitMultiplikationRule()); }
	iv_ruleEinheitMultiplikation=ruleEinheitMultiplikation
	{ $current=$iv_ruleEinheitMultiplikation.current; }
	EOF;

// Rule EinheitMultiplikation
ruleEinheitMultiplikation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEinheitMultiplikationAccess().getEinheitPrimaryParserRuleCall_0());
		}
		this_EinheitPrimary_0=ruleEinheitPrimary
		{
			$current = $this_EinheitPrimary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEinheitMultiplikationAccess().getEinheitMultiplikationLinksAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_operator_2_1='*'
						{
							newLeafNode(lv_operator_2_1, grammarAccess.getEinheitMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitMultiplikationRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_1, null);
						}
						    |
						lv_operator_2_2='/'
						{
							newLeafNode(lv_operator_2_2, grammarAccess.getEinheitMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEinheitMultiplikationRule());
							}
							setWithLastConsumed($current, "operator", lv_operator_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEinheitMultiplikationAccess().getRechtsEinheitPrimaryParserRuleCall_1_2_0());
					}
					lv_rechts_3_0=ruleEinheitPrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEinheitMultiplikationRule());
						}
						set(
							$current,
							"rechts",
							lv_rechts_3_0,
							"hvbargen.meth.Meth.EinheitPrimary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEinheitPrimary
entryRuleEinheitPrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEinheitPrimaryRule()); }
	iv_ruleEinheitPrimary=ruleEinheitPrimary
	{ $current=$iv_ruleEinheitPrimary.current; }
	EOF;

// Rule EinheitPrimary
ruleEinheitPrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEinheitPrimaryAccess().getZahlParserRuleCall_0());
		}
		this_Zahl_0=ruleZahl
		{
			$current = $this_Zahl_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				lv_varref_1_0=RULE_ID
				{
					newLeafNode(lv_varref_1_0, grammarAccess.getEinheitPrimaryAccess().getVarrefIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEinheitPrimaryRule());
					}
					setWithLastConsumed(
						$current,
						"varref",
						lv_varref_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		    |
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getEinheitPrimaryAccess().getLeftParenthesisKeyword_2_0());
			}
			{
				newCompositeNode(grammarAccess.getEinheitPrimaryAccess().getEinheitAdditionParserRuleCall_2_1());
			}
			this_EinheitAddition_3=ruleEinheitAddition
			{
				$current = $this_EinheitAddition_3.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_4=')'
			{
				newLeafNode(otherlv_4, grammarAccess.getEinheitPrimaryAccess().getRightParenthesisKeyword_2_2());
			}
		)
	)
;

// Entry rule entryRuleMethode
entryRuleMethode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMethodeRule()); }
	iv_ruleMethode=ruleMethode
	{ $current=$iv_ruleMethode.current; }
	EOF;

// Rule Methode
ruleMethode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Methode'
		{
			newLeafNode(otherlv_0, grammarAccess.getMethodeAccess().getMethodeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		otherlv_2='als'
		{
			newLeafNode(otherlv_2, grammarAccess.getMethodeAccess().getAlsKeyword_2());
		}
		(
			(
				lv_bezeichnung_3_0=RULE_STRING
				{
					newLeafNode(lv_bezeichnung_3_0, grammarAccess.getMethodeAccess().getBezeichnungSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMethodeRule());
					}
					setWithLastConsumed(
						$current,
						"bezeichnung",
						lv_bezeichnung_3_0,
						"hvbargen.meth.Meth.STRING");
				}
			)
		)
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getMethodeAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMethodeAccess().getAblaufGegebenParserRuleCall_5_0_0());
					}
					lv_ablauf_5_1=ruleGegeben
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodeRule());
						}
						add(
							$current,
							"ablauf",
							lv_ablauf_5_1,
							"hvbargen.meth.Meth.Gegeben");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMethodeAccess().getAblaufEingabeParserRuleCall_5_0_1());
					}
					lv_ablauf_5_2=ruleEingabe
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodeRule());
						}
						add(
							$current,
							"ablauf",
							lv_ablauf_5_2,
							"hvbargen.meth.Meth.Eingabe");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMethodeAccess().getAblaufBerechnungParserRuleCall_5_0_2());
					}
					lv_ablauf_5_3=ruleBerechnung
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodeRule());
						}
						add(
							$current,
							"ablauf",
							lv_ablauf_5_3,
							"hvbargen.meth.Meth.Berechnung");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getMethodeAccess().getAblaufAusgabeParserRuleCall_5_0_3());
					}
					lv_ablauf_5_4=ruleAusgabe
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMethodeRule());
						}
						add(
							$current,
							"ablauf",
							lv_ablauf_5_4,
							"hvbargen.meth.Meth.Ausgabe");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMethodeAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleGegeben
entryRuleGegeben returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGegebenRule()); }
	iv_ruleGegeben=ruleGegeben
	{ $current=$iv_ruleGegeben.current; }
	EOF;

// Rule Gegeben
ruleGegeben returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Gegeben'
		{
			newLeafNode(otherlv_0, grammarAccess.getGegebenAccess().getGegebenKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getGegebenAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGegebenAccess().getStatementsGegebenStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleGegebenStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGegebenRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"hvbargen.meth.Meth.GegebenStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getGegebenAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEingabe
entryRuleEingabe returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEingabeRule()); }
	iv_ruleEingabe=ruleEingabe
	{ $current=$iv_ruleEingabe.current; }
	EOF;

// Rule Eingabe
ruleEingabe returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Eingabe'
		{
			newLeafNode(otherlv_0, grammarAccess.getEingabeAccess().getEingabeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getEingabeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEingabeAccess().getStatementsEingabeStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleEingabeStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEingabeRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"hvbargen.meth.Meth.EingabeStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getEingabeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleBerechnung
entryRuleBerechnung returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBerechnungRule()); }
	iv_ruleBerechnung=ruleBerechnung
	{ $current=$iv_ruleBerechnung.current; }
	EOF;

// Rule Berechnung
ruleBerechnung returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Berechnung'
		{
			newLeafNode(otherlv_0, grammarAccess.getBerechnungAccess().getBerechnungKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBerechnungAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBerechnungAccess().getStatementsBerechnungStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleBerechnungStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBerechnungRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"hvbargen.meth.Meth.BerechnungStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getBerechnungAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleAusgabe
entryRuleAusgabe returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAusgabeRule()); }
	iv_ruleAusgabe=ruleAusgabe
	{ $current=$iv_ruleAusgabe.current; }
	EOF;

// Rule Ausgabe
ruleAusgabe returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ausgabe'
		{
			newLeafNode(otherlv_0, grammarAccess.getAusgabeAccess().getAusgabeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAusgabeAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAusgabeAccess().getStatementsAusgabeStatementParserRuleCall_2_0());
				}
				lv_statements_2_0=ruleAusgabeStatement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAusgabeRule());
					}
					add(
						$current,
						"statements",
						lv_statements_2_0,
						"hvbargen.meth.Meth.AusgabeStatement");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getAusgabeAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGegebenStatement
entryRuleGegebenStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGegebenStatementRule()); }
	iv_ruleGegebenStatement=ruleGegebenStatement
	{ $current=$iv_ruleGegebenStatement.current; }
	EOF;

// Rule GegebenStatement
ruleGegebenStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_eingabename_0_0=RULE_ID
				{
					newLeafNode(lv_eingabename_0_0, grammarAccess.getGegebenStatementAccess().getEingabenameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGegebenStatementRule());
					}
					setWithLastConsumed(
						$current,
						"eingabename",
						lv_eingabename_0_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getGegebenStatementAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getGegebenStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0());
					}
					lv_einheit_2_0=ruleEinheitMultiplikation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getGegebenStatementRule());
						}
						set(
							$current,
							"einheit",
							lv_einheit_2_0,
							"hvbargen.meth.Meth.EinheitMultiplikation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getGegebenStatementAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		otherlv_4='aus'
		{
			newLeafNode(otherlv_4, grammarAccess.getGegebenStatementAccess().getAusKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGegebenStatementRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getGegebenStatementAccess().getRefMethodeMethodeCrossReference_3_0());
				}
			)
		)
		otherlv_6='als'
		{
			newLeafNode(otherlv_6, grammarAccess.getGegebenStatementAccess().getAlsKeyword_4());
		}
		(
			(
				lv_bezeichnung_7_0=RULE_STRING
				{
					newLeafNode(lv_bezeichnung_7_0, grammarAccess.getGegebenStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGegebenStatementRule());
					}
					setWithLastConsumed(
						$current,
						"bezeichnung",
						lv_bezeichnung_7_0,
						"hvbargen.meth.Meth.STRING");
				}
			)
		)
		otherlv_8=';'
		{
			newLeafNode(otherlv_8, grammarAccess.getGegebenStatementAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleEingabeStatement
entryRuleEingabeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEingabeStatementRule()); }
	iv_ruleEingabeStatement=ruleEingabeStatement
	{ $current=$iv_ruleEingabeStatement.current; }
	EOF;

// Rule EingabeStatement
ruleEingabeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_eingabename_0_0=RULE_ID
				{
					newLeafNode(lv_eingabename_0_0, grammarAccess.getEingabeStatementAccess().getEingabenameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEingabeStatementRule());
					}
					setWithLastConsumed(
						$current,
						"eingabename",
						lv_eingabename_0_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getEingabeStatementAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEingabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_2_0());
				}
				lv_einheit_2_0=ruleEinheitMultiplikation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEingabeStatementRule());
					}
					set(
						$current,
						"einheit",
						lv_einheit_2_0,
						"hvbargen.meth.Meth.EinheitMultiplikation");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getEingabeStatementAccess().getRightSquareBracketKeyword_3());
		}
		otherlv_4='als'
		{
			newLeafNode(otherlv_4, grammarAccess.getEingabeStatementAccess().getAlsKeyword_4());
		}
		(
			(
				lv_bezeichnung_5_0=RULE_STRING
				{
					newLeafNode(lv_bezeichnung_5_0, grammarAccess.getEingabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEingabeStatementRule());
					}
					setWithLastConsumed(
						$current,
						"bezeichnung",
						lv_bezeichnung_5_0,
						"hvbargen.meth.Meth.STRING");
				}
			)
		)
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getEingabeStatementAccess().getSemicolonKeyword_6());
		}
	)
;

// Entry rule entryRuleBerechnungStatement
entryRuleBerechnungStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBerechnungStatementRule()); }
	iv_ruleBerechnungStatement=ruleBerechnungStatement
	{ $current=$iv_ruleBerechnungStatement.current; }
	EOF;

// Rule BerechnungStatement
ruleBerechnungStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_berechnungname_0_0=RULE_ID
				{
					newLeafNode(lv_berechnungname_0_0, grammarAccess.getBerechnungStatementAccess().getBerechnungnameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBerechnungStatementRule());
					}
					setWithLastConsumed(
						$current,
						"berechnungname",
						lv_berechnungname_0_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getBerechnungStatementAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBerechnungStatementAccess().getFormelFormelParserRuleCall_2_0());
				}
				lv_formel_2_0=ruleFormel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBerechnungStatementRule());
					}
					set(
						$current,
						"formel",
						lv_formel_2_0,
						"hvbargen.meth.Meth.Formel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='als'
		{
			newLeafNode(otherlv_3, grammarAccess.getBerechnungStatementAccess().getAlsKeyword_3());
		}
		(
			(
				lv_bezeichnung_4_0=RULE_STRING
				{
					newLeafNode(lv_bezeichnung_4_0, grammarAccess.getBerechnungStatementAccess().getBezeichnungSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBerechnungStatementRule());
					}
					setWithLastConsumed(
						$current,
						"bezeichnung",
						lv_bezeichnung_4_0,
						"hvbargen.meth.Meth.STRING");
				}
			)
		)
		otherlv_5=';'
		{
			newLeafNode(otherlv_5, grammarAccess.getBerechnungStatementAccess().getSemicolonKeyword_5());
		}
	)
;

// Entry rule entryRuleAusgabeStatement
entryRuleAusgabeStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAusgabeStatementRule()); }
	iv_ruleAusgabeStatement=ruleAusgabeStatement
	{ $current=$iv_ruleAusgabeStatement.current; }
	EOF;

// Rule AusgabeStatement
ruleAusgabeStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_ausgabename_0_0=RULE_ID
				{
					newLeafNode(lv_ausgabename_0_0, grammarAccess.getAusgabeStatementAccess().getAusgabenameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAusgabeStatementRule());
					}
					setWithLastConsumed(
						$current,
						"ausgabename",
						lv_ausgabename_0_0,
						"hvbargen.meth.Meth.ID");
				}
			)
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getAusgabeStatementAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAusgabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0());
					}
					lv_einheit_2_0=ruleEinheitMultiplikation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAusgabeStatementRule());
						}
						set(
							$current,
							"einheit",
							lv_einheit_2_0,
							"hvbargen.meth.Meth.EinheitMultiplikation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3=']'
			{
				newLeafNode(otherlv_3, grammarAccess.getAusgabeStatementAccess().getRightSquareBracketKeyword_1_2());
			}
		)?
		(
			otherlv_4='als'
			{
				newLeafNode(otherlv_4, grammarAccess.getAusgabeStatementAccess().getAlsKeyword_2_0());
			}
			(
				(
					lv_bezeichnung_5_0=RULE_STRING
					{
						newLeafNode(lv_bezeichnung_5_0, grammarAccess.getAusgabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAusgabeStatementRule());
						}
						setWithLastConsumed(
							$current,
							"bezeichnung",
							lv_bezeichnung_5_0,
							"hvbargen.meth.Meth.STRING");
					}
				)
			)
		)?
		otherlv_6=';'
		{
			newLeafNode(otherlv_6, grammarAccess.getAusgabeStatementAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleFormel
entryRuleFormel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormelRule()); }
	iv_ruleFormel=ruleFormel
	{ $current=$iv_ruleFormel.current; }
	EOF;

// Rule Formel
ruleFormel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFormelAccess().getTextFormelParserRuleCall_0());
		}
		this_TextFormel_0=ruleTextFormel
		{
			$current = $this_TextFormel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFormelAccess().getNumFormelParserRuleCall_1());
		}
		this_NumFormel_1=ruleNumFormel
		{
			$current = $this_NumFormel_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTextFormel
entryRuleTextFormel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextFormelRule()); }
	iv_ruleTextFormel=ruleTextFormel
	{ $current=$iv_ruleTextFormel.current; }
	EOF;

// Rule TextFormel
ruleTextFormel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_tformel_0_0='TODO'
			{
				newLeafNode(lv_tformel_0_0, grammarAccess.getTextFormelAccess().getTformelTODOKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTextFormelRule());
				}
				setWithLastConsumed($current, "tformel", lv_tformel_0_0, "TODO");
			}
		)
	)
;

// Entry rule entryRuleNumFormel
entryRuleNumFormel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumFormelRule()); }
	iv_ruleNumFormel=ruleNumFormel
	{ $current=$iv_ruleNumFormel.current; }
	EOF;

// Rule NumFormel
ruleNumFormel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNumFormelAccess().getNformelEinheitAdditionParserRuleCall_0());
			}
			lv_nformel_0_0=ruleEinheitAddition
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNumFormelRule());
				}
				set(
					$current,
					"nformel",
					lv_nformel_0_0,
					"hvbargen.meth.Meth.EinheitAddition");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

RULE_GANZ : ('+'|'-')? RULE_INT ('_' RULE_INT)*;

RULE_DEZIMAL : ('+'|'-')? RULE_INT ('_' RULE_INT)* '.' (RULE_INT ('_' RULE_INT)*)? (('e'|'E') ('+'|'-')? RULE_INT ('_' RULE_INT)*)?;

RULE_ID : ('$'|'\u20AC'|'^'? '\u00B5'? ('a'..'z'|'A'..'Z'|'_'|'\u00B0') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ('\u00B2'|'\u00B3')?);

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
