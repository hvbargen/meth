/**
 * generated by Xtext 2.26.0
 */
package hvbargen.meth.meth.impl;

import hvbargen.meth.meth.Ausgabe;
import hvbargen.meth.meth.AusgabeStatement;
import hvbargen.meth.meth.Berechnung;
import hvbargen.meth.meth.BerechnungStatement;
import hvbargen.meth.meth.Deklaration;
import hvbargen.meth.meth.Dezimalzahl;
import hvbargen.meth.meth.Dimension;
import hvbargen.meth.meth.DimensionExpr;
import hvbargen.meth.meth.DimensionMultiplikation;
import hvbargen.meth.meth.Eingabe;
import hvbargen.meth.meth.EingabeStatement;
import hvbargen.meth.meth.Einheit;
import hvbargen.meth.meth.EinheitAddition;
import hvbargen.meth.meth.EinheitExpr;
import hvbargen.meth.meth.EinheitMultiplikation;
import hvbargen.meth.meth.Einheitensystem;
import hvbargen.meth.meth.Formel;
import hvbargen.meth.meth.Ganzzahl;
import hvbargen.meth.meth.Gegeben;
import hvbargen.meth.meth.GegebenStatement;
import hvbargen.meth.meth.Konstante;
import hvbargen.meth.meth.MethFactory;
import hvbargen.meth.meth.MethPackage;
import hvbargen.meth.meth.Methode;
import hvbargen.meth.meth.Model;
import hvbargen.meth.meth.NumFormel;
import hvbargen.meth.meth.TextFormel;
import hvbargen.meth.meth.Umrechnung;
import hvbargen.meth.meth.Zahl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MethPackageImpl extends EPackageImpl implements MethPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass modelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass einheitensystemEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass deklarationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dimensionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dimensionExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass einheitEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass umrechnungEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass konstanteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass zahlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ganzzahlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dezimalzahlEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass einheitExprEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass methodeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gegebenEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eingabeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass berechnungEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ausgabeEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gegebenStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass eingabeStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass berechnungStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass ausgabeStatementEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass formelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass textFormelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass numFormelEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass dimensionMultiplikationEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass einheitAdditionEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass einheitMultiplikationEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see hvbargen.meth.meth.MethPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MethPackageImpl()
  {
    super(eNS_URI, MethFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MethPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MethPackage init()
  {
    if (isInited) return (MethPackage)EPackage.Registry.INSTANCE.getEPackage(MethPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMethPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MethPackageImpl theMethPackage = registeredMethPackage instanceof MethPackageImpl ? (MethPackageImpl)registeredMethPackage : new MethPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMethPackage.createPackageContents();

    // Initialize created meta-data
    theMethPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMethPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MethPackage.eNS_URI, theMethPackage);
    return theMethPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getModel()
  {
    return modelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Einheitensystem()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getModel_Methoden()
  {
    return (EReference)modelEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEinheitensystem()
  {
    return einheitensystemEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheitensystem_Deklarationen()
  {
    return (EReference)einheitensystemEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDeklaration()
  {
    return deklarationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDimension()
  {
    return dimensionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDimension_Name()
  {
    return (EAttribute)dimensionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDimension_Basis()
  {
    return (EReference)dimensionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDimensionExpr()
  {
    return dimensionExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDimensionExpr_Ref()
  {
    return (EReference)dimensionExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEinheit()
  {
    return einheitEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEinheit_Name()
  {
    return (EAttribute)einheitEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheit_Ref()
  {
    return (EReference)einheitEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheit_Faktor()
  {
    return (EReference)einheitEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheit_Basiseinheit()
  {
    return (EReference)einheitEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getUmrechnung()
  {
    return umrechnungEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getUmrechnung_Varname()
  {
    return (EAttribute)umrechnungEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUmrechnung_VonEinheit()
  {
    return (EReference)umrechnungEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUmrechnung_Ausdruck()
  {
    return (EReference)umrechnungEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getUmrechnung_NachEinheit()
  {
    return (EReference)umrechnungEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getKonstante()
  {
    return konstanteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getKonstante_Name()
  {
    return (EAttribute)konstanteEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getKonstante_Ausdruck()
  {
    return (EReference)konstanteEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getZahl()
  {
    return zahlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGanzzahl()
  {
    return ganzzahlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGanzzahl_Iwert()
  {
    return (EAttribute)ganzzahlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDezimalzahl()
  {
    return dezimalzahlEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDezimalzahl_Fwert()
  {
    return (EAttribute)dezimalzahlEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEinheitExpr()
  {
    return einheitExprEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEinheitExpr_Varref()
  {
    return (EAttribute)einheitExprEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getMethode()
  {
    return methodeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethode_Name()
  {
    return (EAttribute)methodeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getMethode_Bezeichnung()
  {
    return (EAttribute)methodeEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getMethode_Ablauf()
  {
    return (EReference)methodeEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGegeben()
  {
    return gegebenEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGegeben_Statements()
  {
    return (EReference)gegebenEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEingabe()
  {
    return eingabeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEingabe_Statements()
  {
    return (EReference)eingabeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBerechnung()
  {
    return berechnungEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBerechnung_Statements()
  {
    return (EReference)berechnungEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAusgabe()
  {
    return ausgabeEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAusgabe_Statements()
  {
    return (EReference)ausgabeEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGegebenStatement()
  {
    return gegebenStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGegebenStatement_Eingabename()
  {
    return (EAttribute)gegebenStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGegebenStatement_Einheit()
  {
    return (EReference)gegebenStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getGegebenStatement_RefMethode()
  {
    return (EReference)gegebenStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGegebenStatement_Bezeichnung()
  {
    return (EAttribute)gegebenStatementEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEingabeStatement()
  {
    return eingabeStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEingabeStatement_Eingabename()
  {
    return (EAttribute)eingabeStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEingabeStatement_Einheit()
  {
    return (EReference)eingabeStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEingabeStatement_Bezeichnung()
  {
    return (EAttribute)eingabeStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getBerechnungStatement()
  {
    return berechnungStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBerechnungStatement_Berechnungname()
  {
    return (EAttribute)berechnungStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getBerechnungStatement_Formel()
  {
    return (EReference)berechnungStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getBerechnungStatement_Bezeichnung()
  {
    return (EAttribute)berechnungStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAusgabeStatement()
  {
    return ausgabeStatementEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAusgabeStatement_Ausgabename()
  {
    return (EAttribute)ausgabeStatementEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getAusgabeStatement_Einheit()
  {
    return (EReference)ausgabeStatementEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAusgabeStatement_Bezeichnung()
  {
    return (EAttribute)ausgabeStatementEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFormel()
  {
    return formelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getTextFormel()
  {
    return textFormelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getTextFormel_Tformel()
  {
    return (EAttribute)textFormelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getNumFormel()
  {
    return numFormelEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getNumFormel_Nformel()
  {
    return (EReference)numFormelEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getDimensionMultiplikation()
  {
    return dimensionMultiplikationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDimensionMultiplikation_Links()
  {
    return (EReference)dimensionMultiplikationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getDimensionMultiplikation_Operator()
  {
    return (EAttribute)dimensionMultiplikationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getDimensionMultiplikation_Rechts()
  {
    return (EReference)dimensionMultiplikationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEinheitAddition()
  {
    return einheitAdditionEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheitAddition_Links()
  {
    return (EReference)einheitAdditionEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEinheitAddition_Operator()
  {
    return (EAttribute)einheitAdditionEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheitAddition_Rechts()
  {
    return (EReference)einheitAdditionEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getEinheitMultiplikation()
  {
    return einheitMultiplikationEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheitMultiplikation_Links()
  {
    return (EReference)einheitMultiplikationEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getEinheitMultiplikation_Operator()
  {
    return (EAttribute)einheitMultiplikationEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getEinheitMultiplikation_Rechts()
  {
    return (EReference)einheitMultiplikationEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MethFactory getMethFactory()
  {
    return (MethFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    modelEClass = createEClass(MODEL);
    createEReference(modelEClass, MODEL__EINHEITENSYSTEM);
    createEReference(modelEClass, MODEL__METHODEN);

    einheitensystemEClass = createEClass(EINHEITENSYSTEM);
    createEReference(einheitensystemEClass, EINHEITENSYSTEM__DEKLARATIONEN);

    deklarationEClass = createEClass(DEKLARATION);

    dimensionEClass = createEClass(DIMENSION);
    createEAttribute(dimensionEClass, DIMENSION__NAME);
    createEReference(dimensionEClass, DIMENSION__BASIS);

    dimensionExprEClass = createEClass(DIMENSION_EXPR);
    createEReference(dimensionExprEClass, DIMENSION_EXPR__REF);

    einheitEClass = createEClass(EINHEIT);
    createEAttribute(einheitEClass, EINHEIT__NAME);
    createEReference(einheitEClass, EINHEIT__REF);
    createEReference(einheitEClass, EINHEIT__FAKTOR);
    createEReference(einheitEClass, EINHEIT__BASISEINHEIT);

    umrechnungEClass = createEClass(UMRECHNUNG);
    createEAttribute(umrechnungEClass, UMRECHNUNG__VARNAME);
    createEReference(umrechnungEClass, UMRECHNUNG__VON_EINHEIT);
    createEReference(umrechnungEClass, UMRECHNUNG__AUSDRUCK);
    createEReference(umrechnungEClass, UMRECHNUNG__NACH_EINHEIT);

    konstanteEClass = createEClass(KONSTANTE);
    createEAttribute(konstanteEClass, KONSTANTE__NAME);
    createEReference(konstanteEClass, KONSTANTE__AUSDRUCK);

    zahlEClass = createEClass(ZAHL);

    ganzzahlEClass = createEClass(GANZZAHL);
    createEAttribute(ganzzahlEClass, GANZZAHL__IWERT);

    dezimalzahlEClass = createEClass(DEZIMALZAHL);
    createEAttribute(dezimalzahlEClass, DEZIMALZAHL__FWERT);

    einheitExprEClass = createEClass(EINHEIT_EXPR);
    createEAttribute(einheitExprEClass, EINHEIT_EXPR__VARREF);

    methodeEClass = createEClass(METHODE);
    createEAttribute(methodeEClass, METHODE__NAME);
    createEAttribute(methodeEClass, METHODE__BEZEICHNUNG);
    createEReference(methodeEClass, METHODE__ABLAUF);

    gegebenEClass = createEClass(GEGEBEN);
    createEReference(gegebenEClass, GEGEBEN__STATEMENTS);

    eingabeEClass = createEClass(EINGABE);
    createEReference(eingabeEClass, EINGABE__STATEMENTS);

    berechnungEClass = createEClass(BERECHNUNG);
    createEReference(berechnungEClass, BERECHNUNG__STATEMENTS);

    ausgabeEClass = createEClass(AUSGABE);
    createEReference(ausgabeEClass, AUSGABE__STATEMENTS);

    gegebenStatementEClass = createEClass(GEGEBEN_STATEMENT);
    createEAttribute(gegebenStatementEClass, GEGEBEN_STATEMENT__EINGABENAME);
    createEReference(gegebenStatementEClass, GEGEBEN_STATEMENT__EINHEIT);
    createEReference(gegebenStatementEClass, GEGEBEN_STATEMENT__REF_METHODE);
    createEAttribute(gegebenStatementEClass, GEGEBEN_STATEMENT__BEZEICHNUNG);

    eingabeStatementEClass = createEClass(EINGABE_STATEMENT);
    createEAttribute(eingabeStatementEClass, EINGABE_STATEMENT__EINGABENAME);
    createEReference(eingabeStatementEClass, EINGABE_STATEMENT__EINHEIT);
    createEAttribute(eingabeStatementEClass, EINGABE_STATEMENT__BEZEICHNUNG);

    berechnungStatementEClass = createEClass(BERECHNUNG_STATEMENT);
    createEAttribute(berechnungStatementEClass, BERECHNUNG_STATEMENT__BERECHNUNGNAME);
    createEReference(berechnungStatementEClass, BERECHNUNG_STATEMENT__FORMEL);
    createEAttribute(berechnungStatementEClass, BERECHNUNG_STATEMENT__BEZEICHNUNG);

    ausgabeStatementEClass = createEClass(AUSGABE_STATEMENT);
    createEAttribute(ausgabeStatementEClass, AUSGABE_STATEMENT__AUSGABENAME);
    createEReference(ausgabeStatementEClass, AUSGABE_STATEMENT__EINHEIT);
    createEAttribute(ausgabeStatementEClass, AUSGABE_STATEMENT__BEZEICHNUNG);

    formelEClass = createEClass(FORMEL);

    textFormelEClass = createEClass(TEXT_FORMEL);
    createEAttribute(textFormelEClass, TEXT_FORMEL__TFORMEL);

    numFormelEClass = createEClass(NUM_FORMEL);
    createEReference(numFormelEClass, NUM_FORMEL__NFORMEL);

    dimensionMultiplikationEClass = createEClass(DIMENSION_MULTIPLIKATION);
    createEReference(dimensionMultiplikationEClass, DIMENSION_MULTIPLIKATION__LINKS);
    createEAttribute(dimensionMultiplikationEClass, DIMENSION_MULTIPLIKATION__OPERATOR);
    createEReference(dimensionMultiplikationEClass, DIMENSION_MULTIPLIKATION__RECHTS);

    einheitAdditionEClass = createEClass(EINHEIT_ADDITION);
    createEReference(einheitAdditionEClass, EINHEIT_ADDITION__LINKS);
    createEAttribute(einheitAdditionEClass, EINHEIT_ADDITION__OPERATOR);
    createEReference(einheitAdditionEClass, EINHEIT_ADDITION__RECHTS);

    einheitMultiplikationEClass = createEClass(EINHEIT_MULTIPLIKATION);
    createEReference(einheitMultiplikationEClass, EINHEIT_MULTIPLIKATION__LINKS);
    createEAttribute(einheitMultiplikationEClass, EINHEIT_MULTIPLIKATION__OPERATOR);
    createEReference(einheitMultiplikationEClass, EINHEIT_MULTIPLIKATION__RECHTS);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes
    dimensionEClass.getESuperTypes().add(this.getDeklaration());
    einheitEClass.getESuperTypes().add(this.getDeklaration());
    umrechnungEClass.getESuperTypes().add(this.getDeklaration());
    konstanteEClass.getESuperTypes().add(this.getDeklaration());
    zahlEClass.getESuperTypes().add(this.getEinheitExpr());
    ganzzahlEClass.getESuperTypes().add(this.getZahl());
    dezimalzahlEClass.getESuperTypes().add(this.getZahl());
    textFormelEClass.getESuperTypes().add(this.getFormel());
    numFormelEClass.getESuperTypes().add(this.getFormel());
    dimensionMultiplikationEClass.getESuperTypes().add(this.getDimensionExpr());
    einheitAdditionEClass.getESuperTypes().add(this.getEinheitExpr());
    einheitMultiplikationEClass.getESuperTypes().add(this.getEinheitExpr());

    // Initialize classes and features; add operations and parameters
    initEClass(modelEClass, Model.class, "Model", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getModel_Einheitensystem(), this.getEinheitensystem(), null, "einheitensystem", null, 0, 1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getModel_Methoden(), this.getMethode(), null, "methoden", null, 0, -1, Model.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(einheitensystemEClass, Einheitensystem.class, "Einheitensystem", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEinheitensystem_Deklarationen(), this.getDeklaration(), null, "deklarationen", null, 0, -1, Einheitensystem.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(deklarationEClass, Deklaration.class, "Deklaration", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(dimensionEClass, Dimension.class, "Dimension", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDimension_Name(), ecorePackage.getEString(), "name", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDimension_Basis(), this.getDimensionExpr(), null, "basis", null, 0, 1, Dimension.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dimensionExprEClass, DimensionExpr.class, "DimensionExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDimensionExpr_Ref(), this.getDimension(), null, "ref", null, 0, 1, DimensionExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(einheitEClass, Einheit.class, "Einheit", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEinheit_Name(), ecorePackage.getEString(), "name", null, 0, 1, Einheit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEinheit_Ref(), this.getDimension(), null, "ref", null, 0, 1, Einheit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEinheit_Faktor(), this.getEinheitExpr(), null, "faktor", null, 0, 1, Einheit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEinheit_Basiseinheit(), this.getEinheit(), null, "basiseinheit", null, 0, 1, Einheit.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(umrechnungEClass, Umrechnung.class, "Umrechnung", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getUmrechnung_Varname(), ecorePackage.getEString(), "varname", null, 0, 1, Umrechnung.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUmrechnung_VonEinheit(), this.getEinheit(), null, "vonEinheit", null, 0, 1, Umrechnung.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUmrechnung_Ausdruck(), this.getEinheitExpr(), null, "ausdruck", null, 0, 1, Umrechnung.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getUmrechnung_NachEinheit(), this.getEinheit(), null, "nachEinheit", null, 0, 1, Umrechnung.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(konstanteEClass, Konstante.class, "Konstante", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getKonstante_Name(), ecorePackage.getEString(), "name", null, 0, 1, Konstante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getKonstante_Ausdruck(), this.getEinheitExpr(), null, "ausdruck", null, 0, 1, Konstante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(zahlEClass, Zahl.class, "Zahl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(ganzzahlEClass, Ganzzahl.class, "Ganzzahl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGanzzahl_Iwert(), ecorePackage.getEString(), "iwert", null, 0, 1, Ganzzahl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dezimalzahlEClass, Dezimalzahl.class, "Dezimalzahl", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getDezimalzahl_Fwert(), ecorePackage.getEString(), "fwert", null, 0, 1, Dezimalzahl.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(einheitExprEClass, EinheitExpr.class, "EinheitExpr", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEinheitExpr_Varref(), ecorePackage.getEString(), "varref", null, 0, 1, EinheitExpr.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(methodeEClass, Methode.class, "Methode", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getMethode_Name(), ecorePackage.getEString(), "name", null, 0, 1, Methode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getMethode_Bezeichnung(), ecorePackage.getEString(), "bezeichnung", null, 0, 1, Methode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getMethode_Ablauf(), ecorePackage.getEObject(), null, "ablauf", null, 0, -1, Methode.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gegebenEClass, Gegeben.class, "Gegeben", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getGegeben_Statements(), this.getGegebenStatement(), null, "statements", null, 0, -1, Gegeben.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eingabeEClass, Eingabe.class, "Eingabe", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEingabe_Statements(), this.getEingabeStatement(), null, "statements", null, 0, -1, Eingabe.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(berechnungEClass, Berechnung.class, "Berechnung", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getBerechnung_Statements(), this.getBerechnungStatement(), null, "statements", null, 0, -1, Berechnung.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ausgabeEClass, Ausgabe.class, "Ausgabe", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getAusgabe_Statements(), this.getAusgabeStatement(), null, "statements", null, 0, -1, Ausgabe.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gegebenStatementEClass, GegebenStatement.class, "GegebenStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGegebenStatement_Eingabename(), ecorePackage.getEString(), "eingabename", null, 0, 1, GegebenStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGegebenStatement_Einheit(), this.getEinheitExpr(), null, "einheit", null, 0, 1, GegebenStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getGegebenStatement_RefMethode(), this.getMethode(), null, "refMethode", null, 0, 1, GegebenStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGegebenStatement_Bezeichnung(), ecorePackage.getEString(), "bezeichnung", null, 0, 1, GegebenStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(eingabeStatementEClass, EingabeStatement.class, "EingabeStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getEingabeStatement_Eingabename(), ecorePackage.getEString(), "eingabename", null, 0, 1, EingabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEingabeStatement_Einheit(), this.getEinheitExpr(), null, "einheit", null, 0, 1, EingabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEingabeStatement_Bezeichnung(), ecorePackage.getEString(), "bezeichnung", null, 0, 1, EingabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(berechnungStatementEClass, BerechnungStatement.class, "BerechnungStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getBerechnungStatement_Berechnungname(), ecorePackage.getEString(), "berechnungname", null, 0, 1, BerechnungStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getBerechnungStatement_Formel(), this.getFormel(), null, "formel", null, 0, 1, BerechnungStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getBerechnungStatement_Bezeichnung(), ecorePackage.getEString(), "bezeichnung", null, 0, 1, BerechnungStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(ausgabeStatementEClass, AusgabeStatement.class, "AusgabeStatement", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAusgabeStatement_Ausgabename(), ecorePackage.getEString(), "ausgabename", null, 0, 1, AusgabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getAusgabeStatement_Einheit(), this.getEinheitExpr(), null, "einheit", null, 0, 1, AusgabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getAusgabeStatement_Bezeichnung(), ecorePackage.getEString(), "bezeichnung", null, 0, 1, AusgabeStatement.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(formelEClass, Formel.class, "Formel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);

    initEClass(textFormelEClass, TextFormel.class, "TextFormel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getTextFormel_Tformel(), ecorePackage.getEString(), "tformel", null, 0, 1, TextFormel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(numFormelEClass, NumFormel.class, "NumFormel", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getNumFormel_Nformel(), this.getEinheitExpr(), null, "nformel", null, 0, 1, NumFormel.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(dimensionMultiplikationEClass, DimensionMultiplikation.class, "DimensionMultiplikation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getDimensionMultiplikation_Links(), this.getDimensionExpr(), null, "links", null, 0, 1, DimensionMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getDimensionMultiplikation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, DimensionMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getDimensionMultiplikation_Rechts(), this.getDimensionExpr(), null, "rechts", null, 0, 1, DimensionMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(einheitAdditionEClass, EinheitAddition.class, "EinheitAddition", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEinheitAddition_Links(), this.getEinheitExpr(), null, "links", null, 0, 1, EinheitAddition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEinheitAddition_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, EinheitAddition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEinheitAddition_Rechts(), this.getEinheitExpr(), null, "rechts", null, 0, 1, EinheitAddition.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(einheitMultiplikationEClass, EinheitMultiplikation.class, "EinheitMultiplikation", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getEinheitMultiplikation_Links(), this.getEinheitExpr(), null, "links", null, 0, 1, EinheitMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getEinheitMultiplikation_Operator(), ecorePackage.getEString(), "operator", null, 0, 1, EinheitMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getEinheitMultiplikation_Rechts(), this.getEinheitExpr(), null, "rechts", null, 0, 1, EinheitMultiplikation.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //MethPackageImpl
