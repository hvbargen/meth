/*
 * generated by Xtext 2.26.0
 */
grammar InternalMeth;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package hvbargen.meth.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hvbargen.meth.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import hvbargen.meth.services.MethGrammarAccess;

}
@parser::members {
	private MethGrammarAccess grammarAccess;

	public void setGrammarAccess(MethGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEinheitensystem
entryRuleEinheitensystem
:
{ before(grammarAccess.getEinheitensystemRule()); }
	 ruleEinheitensystem
{ after(grammarAccess.getEinheitensystemRule()); } 
	 EOF 
;

// Rule Einheitensystem
ruleEinheitensystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEinheitensystemAccess().getGroup()); }
		(rule__Einheitensystem__Group__0)
		{ after(grammarAccess.getEinheitensystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDeklaration
entryRuleDeklaration
:
{ before(grammarAccess.getDeklarationRule()); }
	 ruleDeklaration
{ after(grammarAccess.getDeklarationRule()); } 
	 EOF 
;

// Rule Deklaration
ruleDeklaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeklarationAccess().getAlternatives()); }
		(rule__Deklaration__Alternatives)
		{ after(grammarAccess.getDeklarationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimension
entryRuleDimension
:
{ before(grammarAccess.getDimensionRule()); }
	 ruleDimension
{ after(grammarAccess.getDimensionRule()); } 
	 EOF 
;

// Rule Dimension
ruleDimension 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionAccess().getGroup()); }
		(rule__Dimension__Group__0)
		{ after(grammarAccess.getDimensionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimensionMultiplikation
entryRuleDimensionMultiplikation
:
{ before(grammarAccess.getDimensionMultiplikationRule()); }
	 ruleDimensionMultiplikation
{ after(grammarAccess.getDimensionMultiplikationRule()); } 
	 EOF 
;

// Rule DimensionMultiplikation
ruleDimensionMultiplikation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionMultiplikationAccess().getGroup()); }
		(rule__DimensionMultiplikation__Group__0)
		{ after(grammarAccess.getDimensionMultiplikationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDimensionPrimary
entryRuleDimensionPrimary
:
{ before(grammarAccess.getDimensionPrimaryRule()); }
	 ruleDimensionPrimary
{ after(grammarAccess.getDimensionPrimaryRule()); } 
	 EOF 
;

// Rule DimensionPrimary
ruleDimensionPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDimensionPrimaryAccess().getAlternatives()); }
		(rule__DimensionPrimary__Alternatives)
		{ after(grammarAccess.getDimensionPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEinheit
entryRuleEinheit
:
{ before(grammarAccess.getEinheitRule()); }
	 ruleEinheit
{ after(grammarAccess.getEinheitRule()); } 
	 EOF 
;

// Rule Einheit
ruleEinheit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEinheitAccess().getGroup()); }
		(rule__Einheit__Group__0)
		{ after(grammarAccess.getEinheitAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUmrechnung
entryRuleUmrechnung
:
{ before(grammarAccess.getUmrechnungRule()); }
	 ruleUmrechnung
{ after(grammarAccess.getUmrechnungRule()); } 
	 EOF 
;

// Rule Umrechnung
ruleUmrechnung 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUmrechnungAccess().getGroup()); }
		(rule__Umrechnung__Group__0)
		{ after(grammarAccess.getUmrechnungAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleKonstante
entryRuleKonstante
:
{ before(grammarAccess.getKonstanteRule()); }
	 ruleKonstante
{ after(grammarAccess.getKonstanteRule()); } 
	 EOF 
;

// Rule Konstante
ruleKonstante 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getKonstanteAccess().getGroup()); }
		(rule__Konstante__Group__0)
		{ after(grammarAccess.getKonstanteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZahl
entryRuleZahl
:
{ before(grammarAccess.getZahlRule()); }
	 ruleZahl
{ after(grammarAccess.getZahlRule()); } 
	 EOF 
;

// Rule Zahl
ruleZahl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZahlAccess().getAlternatives()); }
		(rule__Zahl__Alternatives)
		{ after(grammarAccess.getZahlAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGanzzahl
entryRuleGanzzahl
:
{ before(grammarAccess.getGanzzahlRule()); }
	 ruleGanzzahl
{ after(grammarAccess.getGanzzahlRule()); } 
	 EOF 
;

// Rule Ganzzahl
ruleGanzzahl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGanzzahlAccess().getIwertAssignment()); }
		(rule__Ganzzahl__IwertAssignment)
		{ after(grammarAccess.getGanzzahlAccess().getIwertAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDezimalzahl
entryRuleDezimalzahl
:
{ before(grammarAccess.getDezimalzahlRule()); }
	 ruleDezimalzahl
{ after(grammarAccess.getDezimalzahlRule()); } 
	 EOF 
;

// Rule Dezimalzahl
ruleDezimalzahl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDezimalzahlAccess().getFwertAssignment()); }
		(rule__Dezimalzahl__FwertAssignment)
		{ after(grammarAccess.getDezimalzahlAccess().getFwertAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEinheitAddition
entryRuleEinheitAddition
:
{ before(grammarAccess.getEinheitAdditionRule()); }
	 ruleEinheitAddition
{ after(grammarAccess.getEinheitAdditionRule()); } 
	 EOF 
;

// Rule EinheitAddition
ruleEinheitAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEinheitAdditionAccess().getGroup()); }
		(rule__EinheitAddition__Group__0)
		{ after(grammarAccess.getEinheitAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEinheitMultiplikation
entryRuleEinheitMultiplikation
:
{ before(grammarAccess.getEinheitMultiplikationRule()); }
	 ruleEinheitMultiplikation
{ after(grammarAccess.getEinheitMultiplikationRule()); } 
	 EOF 
;

// Rule EinheitMultiplikation
ruleEinheitMultiplikation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEinheitMultiplikationAccess().getGroup()); }
		(rule__EinheitMultiplikation__Group__0)
		{ after(grammarAccess.getEinheitMultiplikationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEinheitPrimary
entryRuleEinheitPrimary
:
{ before(grammarAccess.getEinheitPrimaryRule()); }
	 ruleEinheitPrimary
{ after(grammarAccess.getEinheitPrimaryRule()); } 
	 EOF 
;

// Rule EinheitPrimary
ruleEinheitPrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEinheitPrimaryAccess().getAlternatives()); }
		(rule__EinheitPrimary__Alternatives)
		{ after(grammarAccess.getEinheitPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethode
entryRuleMethode
:
{ before(grammarAccess.getMethodeRule()); }
	 ruleMethode
{ after(grammarAccess.getMethodeRule()); } 
	 EOF 
;

// Rule Methode
ruleMethode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodeAccess().getGroup()); }
		(rule__Methode__Group__0)
		{ after(grammarAccess.getMethodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGegeben
entryRuleGegeben
:
{ before(grammarAccess.getGegebenRule()); }
	 ruleGegeben
{ after(grammarAccess.getGegebenRule()); } 
	 EOF 
;

// Rule Gegeben
ruleGegeben 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGegebenAccess().getGroup()); }
		(rule__Gegeben__Group__0)
		{ after(grammarAccess.getGegebenAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEingabe
entryRuleEingabe
:
{ before(grammarAccess.getEingabeRule()); }
	 ruleEingabe
{ after(grammarAccess.getEingabeRule()); } 
	 EOF 
;

// Rule Eingabe
ruleEingabe 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEingabeAccess().getGroup()); }
		(rule__Eingabe__Group__0)
		{ after(grammarAccess.getEingabeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBerechnung
entryRuleBerechnung
:
{ before(grammarAccess.getBerechnungRule()); }
	 ruleBerechnung
{ after(grammarAccess.getBerechnungRule()); } 
	 EOF 
;

// Rule Berechnung
ruleBerechnung 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBerechnungAccess().getGroup()); }
		(rule__Berechnung__Group__0)
		{ after(grammarAccess.getBerechnungAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAusgabe
entryRuleAusgabe
:
{ before(grammarAccess.getAusgabeRule()); }
	 ruleAusgabe
{ after(grammarAccess.getAusgabeRule()); } 
	 EOF 
;

// Rule Ausgabe
ruleAusgabe 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAusgabeAccess().getGroup()); }
		(rule__Ausgabe__Group__0)
		{ after(grammarAccess.getAusgabeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGegebenStatement
entryRuleGegebenStatement
:
{ before(grammarAccess.getGegebenStatementRule()); }
	 ruleGegebenStatement
{ after(grammarAccess.getGegebenStatementRule()); } 
	 EOF 
;

// Rule GegebenStatement
ruleGegebenStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGegebenStatementAccess().getGroup()); }
		(rule__GegebenStatement__Group__0)
		{ after(grammarAccess.getGegebenStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEingabeStatement
entryRuleEingabeStatement
:
{ before(grammarAccess.getEingabeStatementRule()); }
	 ruleEingabeStatement
{ after(grammarAccess.getEingabeStatementRule()); } 
	 EOF 
;

// Rule EingabeStatement
ruleEingabeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEingabeStatementAccess().getGroup()); }
		(rule__EingabeStatement__Group__0)
		{ after(grammarAccess.getEingabeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBerechnungStatement
entryRuleBerechnungStatement
:
{ before(grammarAccess.getBerechnungStatementRule()); }
	 ruleBerechnungStatement
{ after(grammarAccess.getBerechnungStatementRule()); } 
	 EOF 
;

// Rule BerechnungStatement
ruleBerechnungStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBerechnungStatementAccess().getGroup()); }
		(rule__BerechnungStatement__Group__0)
		{ after(grammarAccess.getBerechnungStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAusgabeStatement
entryRuleAusgabeStatement
:
{ before(grammarAccess.getAusgabeStatementRule()); }
	 ruleAusgabeStatement
{ after(grammarAccess.getAusgabeStatementRule()); } 
	 EOF 
;

// Rule AusgabeStatement
ruleAusgabeStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAusgabeStatementAccess().getGroup()); }
		(rule__AusgabeStatement__Group__0)
		{ after(grammarAccess.getAusgabeStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormel
entryRuleFormel
:
{ before(grammarAccess.getFormelRule()); }
	 ruleFormel
{ after(grammarAccess.getFormelRule()); } 
	 EOF 
;

// Rule Formel
ruleFormel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormelAccess().getAlternatives()); }
		(rule__Formel__Alternatives)
		{ after(grammarAccess.getFormelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextFormel
entryRuleTextFormel
:
{ before(grammarAccess.getTextFormelRule()); }
	 ruleTextFormel
{ after(grammarAccess.getTextFormelRule()); } 
	 EOF 
;

// Rule TextFormel
ruleTextFormel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextFormelAccess().getTformelAssignment()); }
		(rule__TextFormel__TformelAssignment)
		{ after(grammarAccess.getTextFormelAccess().getTformelAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumFormel
entryRuleNumFormel
:
{ before(grammarAccess.getNumFormelRule()); }
	 ruleNumFormel
{ after(grammarAccess.getNumFormelRule()); } 
	 EOF 
;

// Rule NumFormel
ruleNumFormel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumFormelAccess().getNformelAssignment()); }
		(rule__NumFormel__NformelAssignment)
		{ after(grammarAccess.getNumFormelAccess().getNformelAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Deklaration__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeklarationAccess().getDimensionParserRuleCall_0()); }
		ruleDimension
		{ after(grammarAccess.getDeklarationAccess().getDimensionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDeklarationAccess().getEinheitParserRuleCall_1()); }
		ruleEinheit
		{ after(grammarAccess.getDeklarationAccess().getEinheitParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDeklarationAccess().getUmrechnungParserRuleCall_2()); }
		ruleUmrechnung
		{ after(grammarAccess.getDeklarationAccess().getUmrechnungParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDeklarationAccess().getKonstanteParserRuleCall_3()); }
		ruleKonstante
		{ after(grammarAccess.getDeklarationAccess().getKonstanteParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getDimensionMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getDimensionMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionPrimaryAccess().getGroup_0()); }
		(rule__DimensionPrimary__Group_0__0)
		{ after(grammarAccess.getDimensionPrimaryAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDimensionPrimaryAccess().getRefAssignment_1()); }
		(rule__DimensionPrimary__RefAssignment_1)
		{ after(grammarAccess.getDimensionPrimaryAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAccess().getGroup_2_0()); }
		(rule__Einheit__Group_2_0__0)
		{ after(grammarAccess.getEinheitAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getEinheitAccess().getGroup_2_1()); }
		(rule__Einheit__Group_2_1__0)
		{ after(grammarAccess.getEinheitAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Zahl__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getZahlAccess().getGanzzahlParserRuleCall_0()); }
		ruleGanzzahl
		{ after(grammarAccess.getZahlAccess().getGanzzahlParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getZahlAccess().getDezimalzahlParserRuleCall_1()); }
		ruleDezimalzahl
		{ after(grammarAccess.getZahlAccess().getDezimalzahlParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getEinheitAdditionAccess().getOperatorPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEinheitAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getEinheitAdditionAccess().getOperatorHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__OperatorAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getEinheitMultiplikationAccess().getOperatorAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEinheitMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getEinheitMultiplikationAccess().getOperatorSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitPrimaryAccess().getZahlParserRuleCall_0()); }
		ruleZahl
		{ after(grammarAccess.getEinheitPrimaryAccess().getZahlParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEinheitPrimaryAccess().getVarrefAssignment_1()); }
		(rule__EinheitPrimary__VarrefAssignment_1)
		{ after(grammarAccess.getEinheitPrimaryAccess().getVarrefAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getEinheitPrimaryAccess().getGroup_2()); }
		(rule__EinheitPrimary__Group_2__0)
		{ after(grammarAccess.getEinheitPrimaryAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__AblaufAlternatives_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufGegebenParserRuleCall_5_0_0()); }
		ruleGegeben
		{ after(grammarAccess.getMethodeAccess().getAblaufGegebenParserRuleCall_5_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufEingabeParserRuleCall_5_0_1()); }
		ruleEingabe
		{ after(grammarAccess.getMethodeAccess().getAblaufEingabeParserRuleCall_5_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufBerechnungParserRuleCall_5_0_2()); }
		ruleBerechnung
		{ after(grammarAccess.getMethodeAccess().getAblaufBerechnungParserRuleCall_5_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufAusgabeParserRuleCall_5_0_3()); }
		ruleAusgabe
		{ after(grammarAccess.getMethodeAccess().getAblaufAusgabeParserRuleCall_5_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormelAccess().getTextFormelParserRuleCall_0()); }
		ruleTextFormel
		{ after(grammarAccess.getFormelAccess().getTextFormelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormelAccess().getNumFormelParserRuleCall_1()); }
		ruleNumFormel
		{ after(grammarAccess.getFormelAccess().getNumFormelParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getEinheitensystemAssignment_0()); }
	(rule__Model__EinheitensystemAssignment_0)
	{ after(grammarAccess.getModelAccess().getEinheitensystemAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getMethodenAssignment_1()); }
	(rule__Model__MethodenAssignment_1)*
	{ after(grammarAccess.getModelAccess().getMethodenAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Einheitensystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheitensystem__Group__0__Impl
	rule__Einheitensystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitensystemAccess().getEinheitensystemAction_0()); }
	()
	{ after(grammarAccess.getEinheitensystemAccess().getEinheitensystemAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheitensystem__Group__1__Impl
	rule__Einheitensystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitensystemAccess().getEinheitensystemKeyword_1()); }
	'Einheitensystem'
	{ after(grammarAccess.getEinheitensystemAccess().getEinheitensystemKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheitensystem__Group__2__Impl
	rule__Einheitensystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitensystemAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getEinheitensystemAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheitensystem__Group__3__Impl
	rule__Einheitensystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitensystemAccess().getDeklarationenAssignment_3()); }
	(rule__Einheitensystem__DeklarationenAssignment_3)*
	{ after(grammarAccess.getEinheitensystemAccess().getDeklarationenAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheitensystem__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitensystemAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getEinheitensystemAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group__0__Impl
	rule__Dimension__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getDimensionKeyword_0()); }
	'Dimension'
	{ after(grammarAccess.getDimensionAccess().getDimensionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group__1__Impl
	rule__Dimension__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getNameAssignment_1()); }
	(rule__Dimension__NameAssignment_1)
	{ after(grammarAccess.getDimensionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group__2__Impl
	rule__Dimension__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getGroup_2()); }
	(rule__Dimension__Group_2__0)?
	{ after(grammarAccess.getDimensionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getDimensionAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dimension__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group_2__0__Impl
	rule__Dimension__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getEqualsSignKeyword_2_0()); }
	'='
	{ after(grammarAccess.getDimensionAccess().getEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dimension__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionAccess().getBasisAssignment_2_1()); }
	(rule__Dimension__BasisAssignment_2_1)
	{ after(grammarAccess.getDimensionAccess().getBasisAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DimensionMultiplikation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionMultiplikation__Group__0__Impl
	rule__DimensionMultiplikation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionMultiplikationAccess().getDimensionPrimaryParserRuleCall_0()); }
	ruleDimensionPrimary
	{ after(grammarAccess.getDimensionMultiplikationAccess().getDimensionPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionMultiplikation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionMultiplikationAccess().getGroup_1()); }
	(rule__DimensionMultiplikation__Group_1__0)*
	{ after(grammarAccess.getDimensionMultiplikationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DimensionMultiplikation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionMultiplikation__Group_1__0__Impl
	rule__DimensionMultiplikation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionMultiplikationAccess().getDimensionMultiplikationLinksAction_1_0()); }
	()
	{ after(grammarAccess.getDimensionMultiplikationAccess().getDimensionMultiplikationLinksAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionMultiplikation__Group_1__1__Impl
	rule__DimensionMultiplikation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionMultiplikationAccess().getOperatorAssignment_1_1()); }
	(rule__DimensionMultiplikation__OperatorAssignment_1_1)
	{ after(grammarAccess.getDimensionMultiplikationAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionMultiplikation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionMultiplikationAccess().getRechtsAssignment_1_2()); }
	(rule__DimensionMultiplikation__RechtsAssignment_1_2)
	{ after(grammarAccess.getDimensionMultiplikationAccess().getRechtsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DimensionPrimary__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionPrimary__Group_0__0__Impl
	rule__DimensionPrimary__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
	'('
	{ after(grammarAccess.getDimensionPrimaryAccess().getLeftParenthesisKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionPrimary__Group_0__1__Impl
	rule__DimensionPrimary__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionPrimaryAccess().getDimensionMultiplikationParserRuleCall_0_1()); }
	ruleDimensionMultiplikation
	{ after(grammarAccess.getDimensionPrimaryAccess().getDimensionMultiplikationParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DimensionPrimary__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDimensionPrimaryAccess().getRightParenthesisKeyword_0_2()); }
	')'
	{ after(grammarAccess.getDimensionPrimaryAccess().getRightParenthesisKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Einheit__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group__0__Impl
	rule__Einheit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getEinheitKeyword_0()); }
	'Einheit'
	{ after(grammarAccess.getEinheitAccess().getEinheitKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group__1__Impl
	rule__Einheit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getNameAssignment_1()); }
	(rule__Einheit__NameAssignment_1)
	{ after(grammarAccess.getEinheitAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group__2__Impl
	rule__Einheit__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getAlternatives_2()); }
	(rule__Einheit__Alternatives_2)
	{ after(grammarAccess.getEinheitAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getEinheitAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Einheit__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group_2_0__0__Impl
	rule__Einheit__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getInKeyword_2_0_0()); }
	'in'
	{ after(grammarAccess.getEinheitAccess().getInKeyword_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getRefAssignment_2_0_1()); }
	(rule__Einheit__RefAssignment_2_0_1)
	{ after(grammarAccess.getEinheitAccess().getRefAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Einheit__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group_2_1__0__Impl
	rule__Einheit__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getEqualsSignKeyword_2_1_0()); }
	'='
	{ after(grammarAccess.getEinheitAccess().getEqualsSignKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group_2_1__1__Impl
	rule__Einheit__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getFaktorAssignment_2_1_1()); }
	(rule__Einheit__FaktorAssignment_2_1_1)
	{ after(grammarAccess.getEinheitAccess().getFaktorAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Einheit__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__Group_2_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAccess().getBasiseinheitAssignment_2_1_2()); }
	(rule__Einheit__BasiseinheitAssignment_2_1_2)?
	{ after(grammarAccess.getEinheitAccess().getBasiseinheitAssignment_2_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Umrechnung__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__0__Impl
	rule__Umrechnung__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getUmrechnungKeyword_0()); }
	'Umrechnung'
	{ after(grammarAccess.getUmrechnungAccess().getUmrechnungKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__1__Impl
	rule__Umrechnung__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getVarnameAssignment_1()); }
	(rule__Umrechnung__VarnameAssignment_1)
	{ after(grammarAccess.getUmrechnungAccess().getVarnameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__2__Impl
	rule__Umrechnung__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getVonEinheitAssignment_2()); }
	(rule__Umrechnung__VonEinheitAssignment_2)
	{ after(grammarAccess.getUmrechnungAccess().getVonEinheitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__3__Impl
	rule__Umrechnung__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getUmrechnungAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__4__Impl
	rule__Umrechnung__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getAusdruckAssignment_4()); }
	(rule__Umrechnung__AusdruckAssignment_4)
	{ after(grammarAccess.getUmrechnungAccess().getAusdruckAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__5__Impl
	rule__Umrechnung__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getNachEinheitAssignment_5()); }
	(rule__Umrechnung__NachEinheitAssignment_5)
	{ after(grammarAccess.getUmrechnungAccess().getNachEinheitAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Umrechnung__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUmrechnungAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getUmrechnungAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Konstante__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Konstante__Group__0__Impl
	rule__Konstante__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKonstanteAccess().getKonstanteKeyword_0()); }
	'Konstante'
	{ after(grammarAccess.getKonstanteAccess().getKonstanteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Konstante__Group__1__Impl
	rule__Konstante__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKonstanteAccess().getNameAssignment_1()); }
	(rule__Konstante__NameAssignment_1)
	{ after(grammarAccess.getKonstanteAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Konstante__Group__2__Impl
	rule__Konstante__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKonstanteAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getKonstanteAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Konstante__Group__3__Impl
	rule__Konstante__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKonstanteAccess().getAusdruckAssignment_3()); }
	(rule__Konstante__AusdruckAssignment_3)
	{ after(grammarAccess.getKonstanteAccess().getAusdruckAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Konstante__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getKonstanteAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getKonstanteAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EinheitAddition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitAddition__Group__0__Impl
	rule__EinheitAddition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAdditionAccess().getEinheitMultiplikationParserRuleCall_0()); }
	ruleEinheitMultiplikation
	{ after(grammarAccess.getEinheitAdditionAccess().getEinheitMultiplikationParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitAddition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAdditionAccess().getGroup_1()); }
	(rule__EinheitAddition__Group_1__0)*
	{ after(grammarAccess.getEinheitAdditionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EinheitAddition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitAddition__Group_1__0__Impl
	rule__EinheitAddition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAdditionAccess().getEinheitAdditionLinksAction_1_0()); }
	()
	{ after(grammarAccess.getEinheitAdditionAccess().getEinheitAdditionLinksAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitAddition__Group_1__1__Impl
	rule__EinheitAddition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAdditionAccess().getOperatorAssignment_1_1()); }
	(rule__EinheitAddition__OperatorAssignment_1_1)
	{ after(grammarAccess.getEinheitAdditionAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitAddition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitAdditionAccess().getRechtsAssignment_1_2()); }
	(rule__EinheitAddition__RechtsAssignment_1_2)
	{ after(grammarAccess.getEinheitAdditionAccess().getRechtsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EinheitMultiplikation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitMultiplikation__Group__0__Impl
	rule__EinheitMultiplikation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitMultiplikationAccess().getEinheitPrimaryParserRuleCall_0()); }
	ruleEinheitPrimary
	{ after(grammarAccess.getEinheitMultiplikationAccess().getEinheitPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitMultiplikation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitMultiplikationAccess().getGroup_1()); }
	(rule__EinheitMultiplikation__Group_1__0)*
	{ after(grammarAccess.getEinheitMultiplikationAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EinheitMultiplikation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitMultiplikation__Group_1__0__Impl
	rule__EinheitMultiplikation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitMultiplikationAccess().getEinheitMultiplikationLinksAction_1_0()); }
	()
	{ after(grammarAccess.getEinheitMultiplikationAccess().getEinheitMultiplikationLinksAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitMultiplikation__Group_1__1__Impl
	rule__EinheitMultiplikation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitMultiplikationAccess().getOperatorAssignment_1_1()); }
	(rule__EinheitMultiplikation__OperatorAssignment_1_1)
	{ after(grammarAccess.getEinheitMultiplikationAccess().getOperatorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitMultiplikation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitMultiplikationAccess().getRechtsAssignment_1_2()); }
	(rule__EinheitMultiplikation__RechtsAssignment_1_2)
	{ after(grammarAccess.getEinheitMultiplikationAccess().getRechtsAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EinheitPrimary__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitPrimary__Group_2__0__Impl
	rule__EinheitPrimary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getEinheitPrimaryAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitPrimary__Group_2__1__Impl
	rule__EinheitPrimary__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitPrimaryAccess().getEinheitAdditionParserRuleCall_2_1()); }
	ruleEinheitAddition
	{ after(grammarAccess.getEinheitPrimaryAccess().getEinheitAdditionParserRuleCall_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EinheitPrimary__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEinheitPrimaryAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getEinheitPrimaryAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Methode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__0__Impl
	rule__Methode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getMethodeKeyword_0()); }
	'Methode'
	{ after(grammarAccess.getMethodeAccess().getMethodeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__1__Impl
	rule__Methode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getNameAssignment_1()); }
	(rule__Methode__NameAssignment_1)
	{ after(grammarAccess.getMethodeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__2__Impl
	rule__Methode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getAlsKeyword_2()); }
	'als'
	{ after(grammarAccess.getMethodeAccess().getAlsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__3__Impl
	rule__Methode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getBezeichnungAssignment_3()); }
	(rule__Methode__BezeichnungAssignment_3)
	{ after(grammarAccess.getMethodeAccess().getBezeichnungAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__4__Impl
	rule__Methode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getMethodeAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__5__Impl
	rule__Methode__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufAssignment_5()); }
		(rule__Methode__AblaufAssignment_5)
		{ after(grammarAccess.getMethodeAccess().getAblaufAssignment_5()); }
	)
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufAssignment_5()); }
		(rule__Methode__AblaufAssignment_5)*
		{ after(grammarAccess.getMethodeAccess().getAblaufAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Methode__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodeAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMethodeAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gegeben__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gegeben__Group__0__Impl
	rule__Gegeben__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenAccess().getGegebenKeyword_0()); }
	'Gegeben'
	{ after(grammarAccess.getGegebenAccess().getGegebenKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gegeben__Group__1__Impl
	rule__Gegeben__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getGegebenAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gegeben__Group__2__Impl
	rule__Gegeben__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenAccess().getStatementsAssignment_2()); }
	(rule__Gegeben__StatementsAssignment_2)*
	{ after(grammarAccess.getGegebenAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gegeben__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getGegebenAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Eingabe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eingabe__Group__0__Impl
	rule__Eingabe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeAccess().getEingabeKeyword_0()); }
	'Eingabe'
	{ after(grammarAccess.getEingabeAccess().getEingabeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eingabe__Group__1__Impl
	rule__Eingabe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getEingabeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eingabe__Group__2__Impl
	rule__Eingabe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeAccess().getStatementsAssignment_2()); }
	(rule__Eingabe__StatementsAssignment_2)*
	{ after(grammarAccess.getEingabeAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Eingabe__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getEingabeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Berechnung__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Berechnung__Group__0__Impl
	rule__Berechnung__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungAccess().getBerechnungKeyword_0()); }
	'Berechnung'
	{ after(grammarAccess.getBerechnungAccess().getBerechnungKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Berechnung__Group__1__Impl
	rule__Berechnung__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getBerechnungAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Berechnung__Group__2__Impl
	rule__Berechnung__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungAccess().getStatementsAssignment_2()); }
	(rule__Berechnung__StatementsAssignment_2)*
	{ after(grammarAccess.getBerechnungAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Berechnung__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getBerechnungAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ausgabe__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ausgabe__Group__0__Impl
	rule__Ausgabe__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeAccess().getAusgabeKeyword_0()); }
	'Ausgabe'
	{ after(grammarAccess.getAusgabeAccess().getAusgabeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ausgabe__Group__1__Impl
	rule__Ausgabe__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAusgabeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ausgabe__Group__2__Impl
	rule__Ausgabe__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeAccess().getStatementsAssignment_2()); }
	(rule__Ausgabe__StatementsAssignment_2)*
	{ after(grammarAccess.getAusgabeAccess().getStatementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ausgabe__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getAusgabeAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GegebenStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__0__Impl
	rule__GegebenStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getEingabenameAssignment_0()); }
	(rule__GegebenStatement__EingabenameAssignment_0)
	{ after(grammarAccess.getGegebenStatementAccess().getEingabenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__1__Impl
	rule__GegebenStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getGroup_1()); }
	(rule__GegebenStatement__Group_1__0)?
	{ after(grammarAccess.getGegebenStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__2__Impl
	rule__GegebenStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getAusKeyword_2()); }
	'aus'
	{ after(grammarAccess.getGegebenStatementAccess().getAusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__3__Impl
	rule__GegebenStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getRefMethodeAssignment_3()); }
	(rule__GegebenStatement__RefMethodeAssignment_3)
	{ after(grammarAccess.getGegebenStatementAccess().getRefMethodeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__4__Impl
	rule__GegebenStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getAlsKeyword_4()); }
	'als'
	{ after(grammarAccess.getGegebenStatementAccess().getAlsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__5__Impl
	rule__GegebenStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getBezeichnungAssignment_5()); }
	(rule__GegebenStatement__BezeichnungAssignment_5)
	{ after(grammarAccess.getGegebenStatementAccess().getBezeichnungAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getGegebenStatementAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GegebenStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group_1__0__Impl
	rule__GegebenStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getGegebenStatementAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group_1__1__Impl
	rule__GegebenStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getEinheitAssignment_1_1()); }
	(rule__GegebenStatement__EinheitAssignment_1_1)
	{ after(grammarAccess.getGegebenStatementAccess().getEinheitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GegebenStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGegebenStatementAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getGegebenStatementAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EingabeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__0__Impl
	rule__EingabeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getEingabenameAssignment_0()); }
	(rule__EingabeStatement__EingabenameAssignment_0)
	{ after(grammarAccess.getEingabeStatementAccess().getEingabenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__1__Impl
	rule__EingabeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getEingabeStatementAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__2__Impl
	rule__EingabeStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getEinheitAssignment_2()); }
	(rule__EingabeStatement__EinheitAssignment_2)
	{ after(grammarAccess.getEingabeStatementAccess().getEinheitAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__3__Impl
	rule__EingabeStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getEingabeStatementAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__4__Impl
	rule__EingabeStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getAlsKeyword_4()); }
	'als'
	{ after(grammarAccess.getEingabeStatementAccess().getAlsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__5__Impl
	rule__EingabeStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getBezeichnungAssignment_5()); }
	(rule__EingabeStatement__BezeichnungAssignment_5)
	{ after(grammarAccess.getEingabeStatementAccess().getBezeichnungAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EingabeStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEingabeStatementAccess().getSemicolonKeyword_6()); }
	';'
	{ after(grammarAccess.getEingabeStatementAccess().getSemicolonKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BerechnungStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__0__Impl
	rule__BerechnungStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getBerechnungnameAssignment_0()); }
	(rule__BerechnungStatement__BerechnungnameAssignment_0)
	{ after(grammarAccess.getBerechnungStatementAccess().getBerechnungnameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__1__Impl
	rule__BerechnungStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getBerechnungStatementAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__2__Impl
	rule__BerechnungStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getFormelAssignment_2()); }
	(rule__BerechnungStatement__FormelAssignment_2)
	{ after(grammarAccess.getBerechnungStatementAccess().getFormelAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__3__Impl
	rule__BerechnungStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getAlsKeyword_3()); }
	'als'
	{ after(grammarAccess.getBerechnungStatementAccess().getAlsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__4__Impl
	rule__BerechnungStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getBezeichnungAssignment_4()); }
	(rule__BerechnungStatement__BezeichnungAssignment_4)
	{ after(grammarAccess.getBerechnungStatementAccess().getBezeichnungAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BerechnungStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBerechnungStatementAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getBerechnungStatementAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AusgabeStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group__0__Impl
	rule__AusgabeStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getAusgabenameAssignment_0()); }
	(rule__AusgabeStatement__AusgabenameAssignment_0)
	{ after(grammarAccess.getAusgabeStatementAccess().getAusgabenameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group__1__Impl
	rule__AusgabeStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getGroup_1()); }
	(rule__AusgabeStatement__Group_1__0)?
	{ after(grammarAccess.getAusgabeStatementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group__2__Impl
	rule__AusgabeStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getGroup_2()); }
	(rule__AusgabeStatement__Group_2__0)?
	{ after(grammarAccess.getAusgabeStatementAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getAusgabeStatementAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AusgabeStatement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group_1__0__Impl
	rule__AusgabeStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getLeftSquareBracketKeyword_1_0()); }
	'['
	{ after(grammarAccess.getAusgabeStatementAccess().getLeftSquareBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group_1__1__Impl
	rule__AusgabeStatement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getEinheitAssignment_1_1()); }
	(rule__AusgabeStatement__EinheitAssignment_1_1)
	{ after(grammarAccess.getAusgabeStatementAccess().getEinheitAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getRightSquareBracketKeyword_1_2()); }
	']'
	{ after(grammarAccess.getAusgabeStatementAccess().getRightSquareBracketKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AusgabeStatement__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group_2__0__Impl
	rule__AusgabeStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getAlsKeyword_2_0()); }
	'als'
	{ after(grammarAccess.getAusgabeStatementAccess().getAlsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AusgabeStatement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAusgabeStatementAccess().getBezeichnungAssignment_2_1()); }
	(rule__AusgabeStatement__BezeichnungAssignment_2_1)
	{ after(grammarAccess.getAusgabeStatementAccess().getBezeichnungAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__EinheitensystemAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getEinheitensystemEinheitensystemParserRuleCall_0_0()); }
		ruleEinheitensystem
		{ after(grammarAccess.getModelAccess().getEinheitensystemEinheitensystemParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__MethodenAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getMethodenMethodeParserRuleCall_1_0()); }
		ruleMethode
		{ after(grammarAccess.getModelAccess().getMethodenMethodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheitensystem__DeklarationenAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitensystemAccess().getDeklarationenDeklarationParserRuleCall_3_0()); }
		ruleDeklaration
		{ after(grammarAccess.getEinheitensystemAccess().getDeklarationenDeklarationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDimensionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dimension__BasisAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionAccess().getBasisDimensionMultiplikationParserRuleCall_2_1_0()); }
		ruleDimensionMultiplikation
		{ after(grammarAccess.getDimensionAccess().getBasisDimensionMultiplikationParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionMultiplikationAccess().getOperatorAlternatives_1_1_0()); }
		(rule__DimensionMultiplikation__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getDimensionMultiplikationAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionMultiplikation__RechtsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionMultiplikationAccess().getRechtsDimensionPrimaryParserRuleCall_1_2_0()); }
		ruleDimensionPrimary
		{ after(grammarAccess.getDimensionMultiplikationAccess().getRechtsDimensionPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DimensionPrimary__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDimensionPrimaryAccess().getRefDimensionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getDimensionPrimaryAccess().getRefDimensionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getDimensionPrimaryAccess().getRefDimensionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getDimensionPrimaryAccess().getRefDimensionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEinheitAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__RefAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAccess().getRefDimensionCrossReference_2_0_1_0()); }
		(
			{ before(grammarAccess.getEinheitAccess().getRefDimensionIDTerminalRuleCall_2_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEinheitAccess().getRefDimensionIDTerminalRuleCall_2_0_1_0_1()); }
		)
		{ after(grammarAccess.getEinheitAccess().getRefDimensionCrossReference_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__FaktorAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAccess().getFaktorEinheitMultiplikationParserRuleCall_2_1_1_0()); }
		ruleEinheitMultiplikation
		{ after(grammarAccess.getEinheitAccess().getFaktorEinheitMultiplikationParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Einheit__BasiseinheitAssignment_2_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAccess().getBasiseinheitEinheitCrossReference_2_1_2_0()); }
		(
			{ before(grammarAccess.getEinheitAccess().getBasiseinheitEinheitIDTerminalRuleCall_2_1_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEinheitAccess().getBasiseinheitEinheitIDTerminalRuleCall_2_1_2_0_1()); }
		)
		{ after(grammarAccess.getEinheitAccess().getBasiseinheitEinheitCrossReference_2_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__VarnameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUmrechnungAccess().getVarnameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUmrechnungAccess().getVarnameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__VonEinheitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUmrechnungAccess().getVonEinheitEinheitCrossReference_2_0()); }
		(
			{ before(grammarAccess.getUmrechnungAccess().getVonEinheitEinheitIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUmrechnungAccess().getVonEinheitEinheitIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getUmrechnungAccess().getVonEinheitEinheitCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__AusdruckAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUmrechnungAccess().getAusdruckEinheitAdditionParserRuleCall_4_0()); }
		ruleEinheitAddition
		{ after(grammarAccess.getUmrechnungAccess().getAusdruckEinheitAdditionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Umrechnung__NachEinheitAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUmrechnungAccess().getNachEinheitEinheitCrossReference_5_0()); }
		(
			{ before(grammarAccess.getUmrechnungAccess().getNachEinheitEinheitIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getUmrechnungAccess().getNachEinheitEinheitIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getUmrechnungAccess().getNachEinheitEinheitCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKonstanteAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getKonstanteAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Konstante__AusdruckAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getKonstanteAccess().getAusdruckEinheitAdditionParserRuleCall_3_0()); }
		ruleEinheitAddition
		{ after(grammarAccess.getKonstanteAccess().getAusdruckEinheitAdditionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ganzzahl__IwertAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGanzzahlAccess().getIwertGANZTerminalRuleCall_0()); }
		RULE_GANZ
		{ after(grammarAccess.getGanzzahlAccess().getIwertGANZTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dezimalzahl__FwertAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDezimalzahlAccess().getFwertDEZIMALTerminalRuleCall_0()); }
		RULE_DEZIMAL
		{ after(grammarAccess.getDezimalzahlAccess().getFwertDEZIMALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAdditionAccess().getOperatorAlternatives_1_1_0()); }
		(rule__EinheitAddition__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getEinheitAdditionAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitAddition__RechtsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitAdditionAccess().getRechtsEinheitMultiplikationParserRuleCall_1_2_0()); }
		ruleEinheitMultiplikation
		{ after(grammarAccess.getEinheitAdditionAccess().getRechtsEinheitMultiplikationParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__OperatorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitMultiplikationAccess().getOperatorAlternatives_1_1_0()); }
		(rule__EinheitMultiplikation__OperatorAlternatives_1_1_0)
		{ after(grammarAccess.getEinheitMultiplikationAccess().getOperatorAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitMultiplikation__RechtsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitMultiplikationAccess().getRechtsEinheitPrimaryParserRuleCall_1_2_0()); }
		ruleEinheitPrimary
		{ after(grammarAccess.getEinheitMultiplikationAccess().getRechtsEinheitPrimaryParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EinheitPrimary__VarrefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEinheitPrimaryAccess().getVarrefIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEinheitPrimaryAccess().getVarrefIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__BezeichnungAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getBezeichnungSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getMethodeAccess().getBezeichnungSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Methode__AblaufAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodeAccess().getAblaufAlternatives_5_0()); }
		(rule__Methode__AblaufAlternatives_5_0)
		{ after(grammarAccess.getMethodeAccess().getAblaufAlternatives_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gegeben__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGegebenAccess().getStatementsGegebenStatementParserRuleCall_2_0()); }
		ruleGegebenStatement
		{ after(grammarAccess.getGegebenAccess().getStatementsGegebenStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Eingabe__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEingabeAccess().getStatementsEingabeStatementParserRuleCall_2_0()); }
		ruleEingabeStatement
		{ after(grammarAccess.getEingabeAccess().getStatementsEingabeStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Berechnung__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBerechnungAccess().getStatementsBerechnungStatementParserRuleCall_2_0()); }
		ruleBerechnungStatement
		{ after(grammarAccess.getBerechnungAccess().getStatementsBerechnungStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ausgabe__StatementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAusgabeAccess().getStatementsAusgabeStatementParserRuleCall_2_0()); }
		ruleAusgabeStatement
		{ after(grammarAccess.getAusgabeAccess().getStatementsAusgabeStatementParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__EingabenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGegebenStatementAccess().getEingabenameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getGegebenStatementAccess().getEingabenameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__EinheitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGegebenStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0()); }
		ruleEinheitMultiplikation
		{ after(grammarAccess.getGegebenStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__RefMethodeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGegebenStatementAccess().getRefMethodeMethodeCrossReference_3_0()); }
		(
			{ before(grammarAccess.getGegebenStatementAccess().getRefMethodeMethodeIDTerminalRuleCall_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getGegebenStatementAccess().getRefMethodeMethodeIDTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getGegebenStatementAccess().getRefMethodeMethodeCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GegebenStatement__BezeichnungAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGegebenStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getGegebenStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__EingabenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEingabeStatementAccess().getEingabenameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEingabeStatementAccess().getEingabenameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__EinheitAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEingabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_2_0()); }
		ruleEinheitMultiplikation
		{ after(grammarAccess.getEingabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EingabeStatement__BezeichnungAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEingabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getEingabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__BerechnungnameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBerechnungStatementAccess().getBerechnungnameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getBerechnungStatementAccess().getBerechnungnameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__FormelAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBerechnungStatementAccess().getFormelFormelParserRuleCall_2_0()); }
		ruleFormel
		{ after(grammarAccess.getBerechnungStatementAccess().getFormelFormelParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BerechnungStatement__BezeichnungAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBerechnungStatementAccess().getBezeichnungSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getBerechnungStatementAccess().getBezeichnungSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__AusgabenameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAusgabeStatementAccess().getAusgabenameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getAusgabeStatementAccess().getAusgabenameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__EinheitAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAusgabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0()); }
		ruleEinheitMultiplikation
		{ after(grammarAccess.getAusgabeStatementAccess().getEinheitEinheitMultiplikationParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AusgabeStatement__BezeichnungAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAusgabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_2_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getAusgabeStatementAccess().getBezeichnungSTRINGTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TextFormel__TformelAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextFormelAccess().getTformelTODOKeyword_0()); }
		(
			{ before(grammarAccess.getTextFormelAccess().getTformelTODOKeyword_0()); }
			'TODO'
			{ after(grammarAccess.getTextFormelAccess().getTformelTODOKeyword_0()); }
		)
		{ after(grammarAccess.getTextFormelAccess().getTformelTODOKeyword_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumFormel__NformelAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumFormelAccess().getNformelEinheitAdditionParserRuleCall_0()); }
		ruleEinheitAddition
		{ after(grammarAccess.getNumFormelAccess().getNformelEinheitAdditionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_GANZ : ('+'|'-')? RULE_INT ('_' RULE_INT)*;

RULE_DEZIMAL : ('+'|'-')? RULE_INT ('_' RULE_INT)* '.' (RULE_INT ('_' RULE_INT)*)? (('e'|'E') ('+'|'-')? RULE_INT ('_' RULE_INT)*)?;

RULE_ID : ('$'|'\u20AC'|'^'? '\u00B5'? ('a'..'z'|'A'..'Z'|'_'|'\u00B0') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')* ('\u00B2'|'\u00B3')?);

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
